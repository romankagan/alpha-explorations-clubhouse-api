openapi: 3.0.0
servers:
  - url: https://www.clubhouseapi.com/api/
info:
  description: Clubhouse API
  title: Clubhouse API
  version: "1"
  x-apisguru-categories:
    - social
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/zhuowei/ClubhouseAPI/main/doc/openapi.yaml
      version: "3.0"
  x-providerName: clubhouseapi.com
paths:
  /call_phone_number_auth:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value: {}
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                jsonObject: {}
          description: success
      summary: Call phone number auth.
  /check_for_update:
    get:
      parameters:
        - example: 1
          in: query
          name: is_testflight
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                noUpdate:
                  value:
                    has_update: false
                    success: true
          description: no updates
      summary: Clubhouse uses this to check for updates when app is not installed from App Store (eg TestFlight)
  /check_waitlist_status:
    post:
      responses:
        "200":
          content:
            application/json:
              examples:
                waitlisted:
                  value:
                    is_onboarding: true
                    is_waitlisted: true
                    success: true
          description: got waitlist status
        "401":
          content:
            application/json:
              examples:
                error:
                  value:
                    detail: Authentication credentials were not provided.
          description: authorization not provided
      summary: checks waitlist status.
  /complete_phone_number_auth:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  phone_number: "+1234567890"
                  verification_code: "1234"
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    access_token: <jwt>
                    auth_token: <auth_token>
                    is_onboarding: true
                    is_verified: true
                    is_waitlisted: true
                    refresh_token: <jwt>
                    success: true
                    user_profile:
                      name: null
                      photo_url: null
                      user_id: 1234
                      username: null
          description: success
      summary: Call phone number auth.
  /follow:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  user_id: 1234
            schema:
              type: object
      responses:
        "401":
          content:
            application/json:
              examples:
                waitlisted:
                  value:
                    error_message: Your account is waitlisted. Please contact us if this is in error.
                    success: false
          description: waitlisted
      summary: follows a user
  /get_all_topics:
    get:
      responses:
        "200":
          content:
            application/json:
              examples:
                latest:
                  value:
                    topics:
                      - abbreviated_title: Example
                        id: 1
                        title: Example
                        topics:
                          - abbreviated_title: The Future
                            id: 140
                            title: ‚è≥ The Future
          description: a list of topics
      summary: gets all topics.
  /get_channels:
    post:
      responses:
        "200":
          content:
            application/json:
              examples:
                channels:
                  value:
                    channels:
                      - channel: abcdefgh
                        channel_id: 123456
                        club:
                          club_id: 12345
                          description: Club description
                          enable_private: true
                          is_community: false
                          is_follow_allowed: true
                          is_membership_private: false
                          name: Club name
                          num_followers: 456
                          num_members: 123
                          num_online: 0
                          photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_<club_id>_<guid>_thumbnail_250x250
                          rules:
                            - desc: Description
                              title: Rule
                        club_id: 12345
                        club_name: Club name
                        creator_user_profile_id: 1234
                        has_blocked_speakers: false
                        is_explore_channel: false
                        is_private: false
                        is_social_mode: false
                        num_all: 1234
                        num_other: 0
                        num_speakers: 123
                        topic: Example Topic
                        url: https://www.joinclubhouse.com/room/abcdefgh
                        users:
                          - is_followed_by_speaker: true
                            is_invited_as_speaker: false
                            is_moderator: true
                            is_speaker: true
                            name: John Example
                            photo_url: https://clubhouseprod.s3.amazonaws.com:443/<user_id>_<guid>_thumbnail_250x250
                            time_joined_as_speaker: 2021-01-20T00:00:00.000000+00:00
                            user_id: 1234
                        welcome_for_user_profile: null
                    events: []
                    success: true
          description: list of channels
      summary: get all channels
  /get_club:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  club_id: 1234
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                club:
                  value:
                    added_by_user_profile: null
                    club:
                      club_id: 123
                      description: Example
                      is_follower: false
                      is_member: false
                      name: Example Club
                      num_followers: 456
                      num_members: 123
                      photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_<club_id>_<guid>_thumbnail_250x250
                    invite_link: null
                    is_admin: false
                    is_follower: false
                    is_member: false
                    is_pending_accept: false
                    is_pending_approval: false
                    member_user_ids: []
                    num_invites: 0
                    success: true
                    topics:
                      - abbreviated_title: Topic Example
                        id: 140
                        title: Topic Example
          description: returns club object
      summary: gets club by id
  /get_clubs_for_topic:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  topic_id: 140
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                clubs:
                  value:
                    clubs:
                      - club_id: 123
                        description: Example
                        is_follower: false
                        is_member: false
                        name: Example Club
                        num_followers: 456
                        num_members: 123
                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_<club_id>_<guid>_thumbnail_250x250
                    count: 1
                    next: null
                    previous: null
                    success: true
          description: returns list of clubs with pagination
      summary: looks up clubs by topic.
  /get_release_notes:
    post:
      responses:
        "200":
          content:
            application/json:
              examples:
                latest:
                  value:
                    action: See What's New
                    should_display: true
                    title: üïπ You are now using the latest update of Clubhouse!
                    url: https://whatsnew.joinclubhouse.com
          description: the response
      summary: gets release notes.
  /get_suggested_club_invites:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  contacts:
                    - name: aaa
                      phone_number: "+11234567890"
                  upload_contacts: true
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                empty:
                  value:
                    success: true
                    suggested_invites: []
          description: returns list of suggested invites.
      summary: uploads contacts
  /get_topic:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  topic_id: 140
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                topic:
                  value:
                    success: true
                    topic:
                      abbreviated_title: The Future
                      id: 140
                      title: ‚è≥ The Future
          description: returns topic info
      summary: looks up topic by ID.
  /get_users_for_topic:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  topic_id: 140
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                users:
                  value:
                    count: 1
                    next: null
                    previous: null
                    success: true
                    users:
                      - bio: John Example is an exemplary user object
                        name: John Example
                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/<user_id>_<guid>_thumbnail_250x250
                        twitter: john_example
                        user_id: 1234
                        username: john_example
          description: returns list of users with pagination
      summary: looks up users by topic.
  /invite_from_waitlist:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  user_id: 1234
            schema:
              type: object
      responses:
        "400":
          content:
            application/json:
              examples:
                waitlisted:
                  value:
                    error_message: Your account is waitlisted. Please contact us if this is in error.
                    success: false
          description: your own account is waitlisted
      summary: wave to another user on the waitlist to give them access
  /join_channel:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  attribution_details: optional/unknown?
                  attribution_source: optional/unknown?
                  channel: abcdefgh
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                channel:
                  value:
                    agora_native_mute: true
                    channel: abcdefgh
                    channel_id: 123456
                    club:
                      club_id: 1234
                      description: Club description
                      enable_private: true
                      is_community: false
                      is_follow_allowed: true
                      is_membership_private: false
                      name: Club name
                      num_followers: 567
                      num_members: 123
                      num_online: 0
                      photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_<club_id>_<guid>_thumbnail_250x250
                      rules: []
                    club_id: 45
                    club_name: Startup Club
                    creator_user_profile_id: 1234
                    handraise_permission: 1
                    is_club_admin: false
                    is_club_member: false
                    is_empty: false
                    is_handraise_enabled: true
                    is_private: false
                    is_social_mode: false
                    pubnub_enable: true
                    pubnub_heartbeat_interval: 29
                    pubnub_heartbeat_value: 60
                    pubnub_origin: null
                    pubnub_token: <pubnub_token>
                    rtm_token: <rtm_token>
                    success: true
                    token: <token>
                    topic: Channel topic
                    url: https://www.joinclubhouse.com/room/abcdefgh
                    users:
                      - first_name: John
                        is_followed_by_speaker: true
                        is_invited_as_speaker: true
                        is_moderator: true
                        is_new: true
                        is_speaker: true
                        name: John Example
                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/<user_id>_<guid>_thumbnail_250x250
                        skintone: 3
                        time_joined_as_speaker: 2021-01-31T00:00:00.000000+00:00
                        user_id: 123456
                        username: john_example
                      - first_name: Current
                        is_followed_by_speaker: false
                        is_invited_as_speaker: false
                        is_moderator: false
                        is_new: false
                        is_speaker: false
                        name: The currently joining user
                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/<user_id>_<guid>_thumbnail_250x250
                        skintone: 3
                        time_joined_as_speaker: null
                        user_id: 1234
                        username: currentuser
                    welcome_for_user_profile: null
          description: stuff needed to actually join a channel
        "400":
          content:
            application/json:
              examples:
                appTooOld:
                  value:
                    error_message: Please upgrade the app to join rooms!
                    success: false
                roomNotAvailable:
                  value:
                    error_message: >-
                      That room is no longer available üëãüèº

                      Try starting a new one instead?
                    success: false
          description: cannot join
      summary: join a channel.
  /leave_channel:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  channel: abcdefgh
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                channel:
                  value:
                    success: true
          description: left the channel
      summary: leave a channel.
  /me:
    post:
      responses:
        "200":
          content:
            application/json:
              examples:
                examples:
                  value:
                    access_token: <jwt>
                    actionable_notifications_count: 0
                    auth_token: <auth_token>
                    blocked_ids: null
                    email: null
                    feature_flags:
                      - ""
                    following_ids: null
                    has_unread_notifications: false
                    is_admin: false
                    notifications_enabled: false
                    num_invites: 0
                    refresh_token: <jwt>
                    success: true
                    user_profile:
                      name: null
                      photo_url: null
                      user_id: 1234
                      username: null
          description: the response
        "403":
          content:
            application/json:
              examples:
                examples:
                  value:
                    detail: You do not have permission to perform this action.
          description: error response - happens if account is banned (is_blocked)
      summary: gets user
  /refresh_token:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  refresh: <refresh_token>
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                validToken:
                  value:
                    access: <access_token>
                    refresh: <refresh_token>
          description: returns new access and refresh token
        "401":
          content:
            application/json:
              examples:
                invalidToken:
                  value:
                    code: token_not_valid
                    detail: Token is invalid or expired
          description: invalid refresh token
      summary: gets an access_token from a refresh_token.
  /resend_phone_number_auth:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value: {}
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                jsonObject: {}
          description: success
      summary: Resend phone number auth.
  /start_phone_number_auth:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  phone_number: "+11234567890"
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                failure:
                  value:
                    error_message: ""
                    is_blocked: false
                    success: false
                phoneBlocked:
                  value:
                    is_blocked: true
                    success: true
                success:
                  value:
                    error_message: null
                    is_blocked: false
                    success: true
                throttled:
                  value:
                    error_message: Our systems have detected high usage of this feature from your account. Please try again later.
                    success: false
          description: success
      summary: Starts phone number auth.
  /update_username:
    post:
      requestBody:
        content:
          application/json:
            examples:
              jsonObject:
                value:
                  username: hipsterhouse
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    error_message: null
                    success: true
          description: username successfully set
        "400":
          content:
            application/json:
              examples:
                emptyString:
                  value:
                    error_message: This username is not allowed. Please try another one.
                    success: false
                taken:
                  value:
                    error_message: This username has already been taken by a different user.
                    success: false
          description: invalid/taken username (eg empty string)
      summary: edits username.
